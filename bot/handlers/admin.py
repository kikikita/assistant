from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
import httpx

from settings import settings
from filters.chat_filters import AdminFilter

router = Router()
INSIGHTS_URL = f"{settings.bots.app_url}/api/v1/resume"


@router.message(AdminFilter(), Command("admin"))
async def admin_cmd(msg: Message):
    txt = ('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
           '/update_questions -> –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –≤–æ–ø—Ä–æ—Å–æ–≤\n'
           '/health -> –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ API\n'
           )
    await msg.answer(txt)


@router.message(AdminFilter(), Command("update_questions"))
async def update_questions_cmd(msg: Message):
    bot_msg = await msg.answer("‚è≥ –û–±–Ω–æ–≤–ª—è—é –≤–æ–ø—Ä–æ—Å—ã –∏–∑ Google Sheets‚Ä¶")
    async with httpx.AsyncClient(timeout=30.0) as cli:
        resp = await cli.post(
            f"{settings.bots.app_url}/api/v1/admin/update-questions",
            json={"token": str(settings.bots.admin_id)},
        )

    if resp.status_code == 200:
        cnt = resp.json()["inserted"]
        await bot_msg.edit_text(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ó–∞–º–µ–Ω–µ–Ω–æ {cnt} –≤–æ–ø—Ä–æ—Å–æ–≤.")
    else:
        await bot_msg.edit_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {resp.text}")


@router.message(AdminFilter(), Command(commands=["health"]))
async def health_command(message: Message):
    url = f"{settings.bots.app_url}/api/v1/health_check"
    async with httpx.AsyncClient(timeout=5.0) as client:
        resp = await client.get(url)
    status = "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç" if resp.status_code == 200 else "‚ùå –ù–µ—Ç —Å–≤—è–∑–∏"
    await message.answer(status)


@router.message(Command("insights"))
async def get_insights_cmd(msg: Message):
    """
    /insights <tg_id> ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–∫—Ç—ã –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    """
    tg_id = msg.from_user.id
    parts = msg.text.split(maxsplit=1)
    if len(parts) > 1 and parts[1].isdigit():
        tg_id = int(parts[1])
        await msg.answer(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /insights –¥–ª—è {tg_id}")

    await msg.answer("‚è≥ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –∏–Ω—Å–∞–π—Ç—ã‚Ä¶")
    async with httpx.AsyncClient(timeout=30.0) as client:
        resp = await client.get(f"{INSIGHTS_URL}/{tg_id}/insight")

    if resp.status_code == 200:
        data = resp.json()
        facts = data["insights"]
        if facts:
            formatted = "\n".join(f"‚Ä¢ {fact}" for fact in facts)
            await msg.answer(f"üìù –§–∞–∫—Ç—ã –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n{formatted}")
        else:
            await msg.answer("‚ÑπÔ∏è –§–∞–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
    else:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞: {resp.text}")
